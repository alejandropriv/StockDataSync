apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.datacollectorservice.name }}
  namespace: {{ .Values.datacollectorservice.namespace }}
  labels:
    application: {{ .Values.datacollectorservice.application }}
    version: {{ .Values.datacollectorservice.version }}
    stage: {{ .Values.datacollectorservice.stage }}
    #helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    tier: {{ .Values.datacollectorservice.tier }}

spec:
  replicas: {{.Values.datacollectorservice.replicaCount }}
  selector:
    matchLabels:
      application: {{ .Values.datacollectorservice.application }}
      stage: {{ .Values.datacollectorservice.stage }}
      tier: {{ .Values.datacollectorservice.tier }}
  template:
    metadata:
      labels:
        application: {{ .Values.datacollectorservice.application }}
        version: {{ .Values.datacollectorservice.version }}
        stage: {{ .Values.datacollectorservice.stage }}
        #helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        tier: {{ .Values.datacollectorservice.tier }}
    spec:
      serviceAccountName: {{ .Values.datacollectorservice.application }}-admin
      containers:
        - name: {{ .Values.datacollectorservice.service.name }}
          image: "{{ .Values.datacollectorservice.image.registry }}/{{ .Values.datacollectorservice.image.name }}:{{ .Values.datacollectorservice.image.version }}"
          imagePullPolicy: IfNotPresent
          command:
          - /bin/sh
          - -c
          - sleep 1000
          ports:
            - name: {{ .Values.datacollectorservice.port.name }}
              containerPort: {{ .Values.datacollectorservice.port.number }}
          livenessProbe:
            httpGet: 
              path: "/ping"
              port: {{ .Values.datacollectorservice.port.number }}
            initialDelaySeconds: 10
            periodSeconds: 30
          env:
            {{- if $.Values.datacollectorservice.secret }}
            {{- range $key, $values := $.Values.datacollectorservice.secret }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.datacollectorservice.serviceName }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
